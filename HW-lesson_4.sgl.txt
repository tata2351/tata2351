Lesson 4 HOME work

--схема БД: https://docs.google.com/document/d/1NVORWgdwlKepKq_b8SPRaSpraltxoMg2SIusTEN6mEQ/edit?usp=sharing
--colab/jupyter: https://colab.research.google.com/drive/1j4XdGIU__NYPVpv74vQa9HUOAkxsgUez?usp=sharing

--task13 (lesson3)
--Компьютерная фирма: Вывести список всех продуктов и производителя с указанием типа продукта (pc, printer, laptop). Вывести: model, maker, type

select model, maker, type  
from
(
		select maker, product.model, type
		from PC 
		join product
		on pc.model = product.model
	union all 
		select maker, product.model, type 
		from printer 
		join product
		on printer.model = product.model 
	union all
		select maker, product.model, type
		from laptop 
		join product
		on laptop.model = product.model
)  a
group by maker; 
--task14 (lesson3)
--Компьютерная фирма: При выводе всех значений из таблицы printer дополнительно вывести для тех, у кого цена вышей средней PC - "1", у остальных - "0"
select *,
case 
	when price > (select AVG(price) from printer)
	then 1
	else 0
end flag
from printer

--task15 (lesson3)
--Корабли: Вывести список кораблей, у которых class отсутствует (IS NULL)
select *
from ships
where class is null

--task16 (lesson3)
--Корабли: Укажите сражения, которые произошли в годы, не совпадающие ни с одним из годов спуска кораблей на воду.
with q1 as (
select name, extract(year from date) as year 
from battles 
)
select *
from q1 
where year not in (select launched from ships)

--task17 (lesson3)
--Корабли: Найдите сражения, в которых участвовали корабли класса Kongo из таблицы Ships.
select distinct battle 
from outcomes o 
where ship in 
(select name
from ships 
where class = 'Kongo')


--task1  (lesson4)
-- Компьютерная фирма: Сделать view (название all_products_flag_300) для всех товаров (pc, printer, laptop) с флагом, если стоимость больше > 300. 
Во view три колонки: model, price, flag
- Компьютерная фирма: Сделать view (название: pc_with_flag_speed_price) над таблицей PC c флагом:
-- flag = 1 для тех, у кого speed > 500 и price < 900, для остальных flag = 0

create view all_products_flag_300 as
select *,
case when speed > 500 and price < 900 then 1
else 0
end flag
from pc;

select *
from all_products_flag_300 ;


--task2  (lesson4)
-- Компьютерная фирма: Сделать view (название all_products_flag_avg_price) для всех товаров (pc, printer, laptop) с флагом, если стоимость больше cредней .
 --Во view три колонки: model, price, flag
create view all_products_flag_avg_price as

with all_products_flag_avg_price_1 as
(
		select product.model, price 
		from product 
		join pc 
		on pc.model = product.model 
		
		union all 
		select product.model, price   
		from product 
		join printer 
		on printer.model = product.model 
		
		union all 
		select product.model, price   
		from product 
		join laptop  
		on laptop.model = product.model 
     )
select model, price,
case when price > (select AVG(price) from all_products_flag_avg_price_1)
	 then 1
	 else 0
     end flag
from all_products_flag_avg_price_1
group by model, flag, price;

select *
from all_products_flag_avg_price;


--task3  (lesson4)
-- Компьютерная фирма: Вывести все принтеры производителя = 'A' со стоимостью выше средней по принтерам производителя = 'D' и 'C'. Вывести model
 
select printer.model
from printer
join product
on product.model = printer.model
where price > 
(
	select avg(price)
    from printer
	join product
	on product.model = printer.model
	where maker = 'D'and maker = 'C';
  )
and maker = 'A';

--task4 (lesson4)
-- Компьютерная фирма: Вывести все товары производителя = 'A' со стоимостью выше средней по принтерам производителя = 'D' и 'C'.
-- Вывести model
with all_product_3 as
(
		select product.model, price, maker
		from product 
		join pc 
		on pc.model = product.model 
		
		union all 
		select product.model, price, maker   
		from product 
		join printer 
		on printer.model = product.model 
		
		union all 
		select product.model, price, maker   
		from product 
		join laptop  
		on laptop.model = product.model 
     )
select model
from all_product_3
where price > 
(
	select avg(price)
    from printer
	join product
	on product.model = printer.model
	where maker = 'D'and maker = 'C';
   )
and maker = 'A';

--task5 (lesson4)
-- Компьютерная фирма: Какая средняя цена среди уникальных продуктов производителя = 'A' (printer & laptop & pc)

sum (price) /count (price) = avg


select (
  (select sum(price)
  from product
  join printer
  on product.model = printer.model
  where maker = 'A')
+
  (select sum(price)
  from product
  join laptop
  on product.model = laptop.model
  where maker = 'A')
+
  (select sum(price)
  from product
  join pc
  on product.model = pc.model
  where maker = 'A')
)
/
(
  (select count(price)
  from product
  join printer
  on product.model = printer.model
  where maker = 'A')
+
  (select count(price)
  from product
  join laptop
  on product.model = laptop.model
  where maker = 'A')
+
  (select count(price)
  from product
  join pc
  on product.model = pc.model
  where maker = 'A')
)


--task6 (lesson4)
-- Компьютерная фирма: Сделать view с количеством товаров (название count_products_by_makers) по каждому производителю. Во view: maker, count
create view count_products_by_makers as

select maker, count(*) 
from
(
		select maker, product.model
		from PC 
		join product
		on pc.model = product.model
	union all 
		select maker, product.model 
		from printer 
		join product
		on printer.model = product.model 
	union all
		select maker, product.model
		from laptop 
		join product
		on laptop.model = product.model
) a
group by maker; 

select *
from count_products_by_makers ;

--task7 (lesson4)
-- По предыдущему view (count_products_by_makers) сделать график в colab (X: maker, y: count)
colab

request = """
select * 
from count_products_by_makers
"""


--task8 (lesson4)
-- Компьютерная фирма: Сделать копию таблицы printer (название printer_updated) и удалить из нее все принтеры производителя 'D'
create table printer_updated as

select *
from printer
join product
on printer.model = product.model
where maker <> 'D'


select *
from printer_updated;


--task9 (lesson4)
-- Компьютерная фирма: Сделать на базе таблицы (printer_updated) view с дополнительной колонкой производителя (название printer_updated_with_makers)
create view printer_updated_with_makers as

select printer_updated.code,printer_updated.model,printer_updated.color,printer_updated."type",printer_updated.price,product.maker
from printer_updated
join product
on printer_updated.model = product.model
where maker <> 'D'

select *
from printer_updated_with_makers;

--task10 (lesson4)
-- Корабли: Сделать view c количеством потопленных кораблей и классом корабля (название sunk_ships_by_classes). 
--Во view: count, class (если значения класса нет/IS NULL, то заменить на 0)
create view sunk_ships_by_classes as

select count(ship), class
from(
      select name as ship, class
      from ships
    union all
      select ship , '0' as class
      from outcomes 
  ) a 
  where ship in (
  select ship 
  from outcomes 
  where result = 'sunk'
)  
group by class ;


select *
from sunk_ships_by_classes ;


--task11 (lesson4)
-- Корабли: По предыдущему view (sunk_ships_by_classes) сделать график в colab (X: class, Y: count)
colab
request = """
select * 
from sunk_ships_by_classes
"""

--task12 (lesson4)
-- Корабли: Сделать копию таблицы classes (название classes_with_flag) и добавить в нее flag: если количество орудий больше или равно 9 - то 1, иначе 0
create table classes_with_flag as
select *,
case 
     when numguns >= 9 then 1
else 0
end flag
from classes;


select *
from classes_with_flag;

--task13 (lesson4)
-- Корабли: Сделать график в colab по таблице classes с количеством классов по странам (X: country, Y: count)
colab
create view task13_4 as
select country, count(*)
from classes
group by country;

select *
from task13_4;
  
--task14 (lesson4)
-- Корабли: Вернуть количество кораблей, у которых название начинается с буквы "O" или "M".
select count(name)
from ships 
where name like 'O%' or name like 'M%'

--task15 (lesson4)
-- Корабли: Вернуть количество кораблей, у которых название состоит из двух слов.
select count(name)
from ships 
where name like '% %'

--task16 (lesson4)
-- Корабли: Построить график с количеством запущенных на воду кораблей и годом запуска (X: year, Y: count)
 colab
select launched, count(name)
from ships
group by launched
order by launched asc

